<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Narrow Phase on Bonk Docs</title>
    <link>https://moontools-docs.github.io/bonk/narrow_phase/</link>
    <description>Recent content in Narrow Phase on Bonk Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Sep 2019 22:10:17 -0700</lastBuildDate>
    
	<atom:link href="https://moontools-docs.github.io/bonk/narrow_phase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>https://moontools-docs.github.io/bonk/narrow_phase/overview/</link>
      <pubDate>Sat, 14 Sep 2019 22:11:27 -0700</pubDate>
      
      <guid>https://moontools-docs.github.io/bonk/narrow_phase/overview/</guid>
      <description>In the broad phase, we were looking for speed. Now, once we have obtained a list of potential collisions, we want to know if these shapes are actually colliding or not. We are looking for accuracy.</description>
    </item>
    
    <item>
      <title>GJK2D</title>
      <link>https://moontools-docs.github.io/bonk/narrow_phase/gjk2d/</link>
      <pubDate>Sat, 14 Sep 2019 22:47:55 -0700</pubDate>
      
      <guid>https://moontools-docs.github.io/bonk/narrow_phase/gjk2d/</guid>
      <description>Bonk uses the Gilbert-Johnson-Keerthi, or GJK, algorithm to perform narrow phase collision detection.
To accurately check a collision, you must pass two sets of shapes and transforms to the GJK2D.TestCollision method. Remember that a transform operates on the vertices of a shape: it moves, rotates, and scales them in 2D space.
var circleA = new Circle(2); var transformA = new Transform2D(new Vector2(-1, -1)); var circleB = new Circle(2); var transformB = new Transform2D(new Vector2(1, 1)); var (result, simplex) = GJK2D.</description>
    </item>
    
    <item>
      <title>EPA2D</title>
      <link>https://moontools-docs.github.io/bonk/narrow_phase/epa2d/</link>
      <pubDate>Sat, 14 Sep 2019 22:54:35 -0700</pubDate>
      
      <guid>https://moontools-docs.github.io/bonk/narrow_phase/epa2d/</guid>
      <description>If an overlap has occurred, often we wish to determine the minimum separating vector, which is the shortest possible vector by which one of the shapes could be moved in order for them to stop overlapping. For this purpose, Bonk implements the Expanding Polytope Algorithm.
To use this feature, you must pass the shapes and transforms as well as the simplex that is returned from the GJK2D.TestCollision method.
var squareA = new Rectangle(-1, -1, 1, 1); var transformA = Transform2D.</description>
    </item>
    
  </channel>
</rss>